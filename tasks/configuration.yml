---
- name: configure Nextcloud
  block:
    - name: ensure Nextcloud is initialized
      command: >
        php occ maintenance:install
        --database {{ dubzland_nextcloud_db_type | replace('lite3', 'lite') }}
        --database-host "{{ dubzland_nextcloud_db_host }}"
        --database-name {{ dubzland_nextcloud_db_name }}
        --database-user {{ dubzland_nextcloud_db_username }}
        --database-pass "{{ dubzland_nextcloud_db_password }}"
        --admin-user {{ dubzland_nextcloud_admin_username }}
        --admin-pass {{ dubzland_nextcloud_admin_password }}
        --data-dir {{ dubzland_nextcloud_data_dir }}
      args:
        chdir: "{{ dubzland_nextcloud_root }}"
        creates: "{{ dubzland_nextcloud_root }}/config/config.php"

    - name: ensure Nextcloud has a minimal configuration
      nextcloud_setting:
        name: "{{ item.name }}"
        type: system
        value: "{{ item.value | default(omit) }}"
        nextcloud_root: "{{ dubzland_nextcloud_root }}"
      loop:
        - name: overwrite.cli.url
          value: "{{ dubzland_nextcloud_url }}"
        - name: trusted_domains
          value: "{{ dubzland_nextcloud_trusted_domains }}"

    - name: ensure all user-supplied Nextcloud configuration is applied
      nextcloud_setting:
        name: "{{ item.name }}"
        type: "{{ item.type | default(omit) }}"
        value: "{{ item.value | default(omit) }}"
        state: "{{ item.state | default(omit) }}"
        nextcloud_root: "{{ dubzland_nextcloud_root }}"
      loop: "{{ dubzland_nextcloud_settings }}"

    - name: ensure Nextcloud apps are installed
      nextcloud_app:
        name: "{{ item.name }}"
        state: "{{ item.state | default(omit) }}"
        enabled: "{{ item.enabled | default(omit) }}"
        nextcloud_root: "{{ dubzland_nextcloud_root }}"
      loop: "{{ dubzland_nextcloud_apps }}"
      register: app_install_result
      until: app_install_result | succeeded
      retries: 10
      wait: 10

    - name: ensure Nextcloud apps are configured
      nextcloud_setting:
        name: "{{ item.1.name }}"
        type: app
        value: "{{ item.1.value | default(omit) }}"
        state: "{{ item.1.state | default(omit) }}"
        appname: "{{ item.0.name }}"
        nextcloud_root: "{{ dubzland_nextcloud_root }}"
      loop: "{{ dubzland_nextcloud_apps | subelements('settings') }}"
      when: item.0.state == 'present'

  become: true
  become_user: "{{ dubzland_nextcloud_web_user }}"
  become_method: sudo
  no_log: true
  vars:
    ansible_ssh_pipelining: true
